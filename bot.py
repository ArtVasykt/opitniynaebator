import sys
import os
from flask import Flask, request
import telepot
from telepot.loop import OrderedWebhook
import smswithstatusbar as smsdrawer
from telegram_drawer import chat as chatdraw
import watermarker as wm
import result_drawer
import joydrawer
import sberdrawer
import random
from io import BytesIO
from PIL import Image
from telepot.namedtuple import ReplyKeyboardMarkup, InlineKeyboardMarkup

"""
$ python2.7 flask_skeleton.py <token> <listening_port> <webhook_url>
Webhook path is '/webhook', therefore:
<webhook_url>: https://<base>/webhook
"""
query = {}
sms_query = {}
tq = {} # Telegram query
img_query = {}
amounts = {}
WATERMARK_MODE = True
PASSWORD = '–∞—Ä—Ç–µ–º –∫—Ä—É—Ç–æ–π'
ADMINS = ['474504117', '551475668']

TELEGRAM_CONTROL = [
    [dict(text='–°–≤–∞–øüí¨', callback_data='telegram.swap')],
    [dict(text='–û—Ç–º–µ–Ω–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–µ–µüîô', callback_data='telegram.undo')],
    [dict(text='–í—Ä–µ–º—è —Å–æ–æ–±—â–µ–Ω–∏—èüïê', callback_data='telegram.time')]
    ]

def adminka(chat_id):
    query[chat_id] = ['logged']
    bot.sendMessage(chat_id, '–ß–µ–≥–æ —Ö–æ—á–µ—à—å –≥–æ—Å–ø–æ–¥–∏–Ω)üíª', reply_markup=InlineKeyboardMarkup(inline_keyboard=[
        [dict(text='–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ê–π—Å–µ–Ω—ãüòç', callback_data='result.generate')],
        [dict(text='–°–±–µ—Ä–±–∞–Ω–∫üí≥', callback_data='sberbank.generate')],
        [dict(text='JOYCASINO –ë–∞–ª–∞–Ω—Åü§ë', callback_data='joycasino.generate')],
        [dict(text='SMS‚úâÔ∏è', callback_data='sms.generate')],
        [dict(text='Telegram[Beta]üí†', callback_data='telegram.generate')],
        [dict(text='Watermark‚úèÔ∏è', callback_data='watermark.generate')]]))

def on_chat_message(msg):
    content_type, chat_type, chat_id = telepot.glance(msg)
    if chat_id not in query:
        query[chat_id] = []
    if content_type == 'text':
        if msg['text'] == '/start':
            if 'logged' not in query[chat_id]:
                if chat_id in ADMINS:
                    adminka(chat_id)
                else:
                    bot.sendMessage(chat_id, '**–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å**üîê', parse_mode='Markdown')
                    query[chat_id].append('logging')
            else:
                adminka(chat_id)

        elif 'logging' in query[chat_id]:
            if msg['text'].lower() == PASSWORD:
                query[chat_id].append('logged')
                bot.sendMessage(chat_id, '**–í—Ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ, –±—Ä–∞—Ç**üñ§', parse_mode='Markdown')
                adminka(chat_id)
            else:
                bot.sendMessage(chat_id, 'üö´–ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å —Å—É–∫–∞!')

        elif 'logged' in query[chat_id]:
            try:
                if msg['text'] == '/backnahoi':
                    adminka(chat_id)
                elif 'sberbank' in query[chat_id]:
                    numbers = msg['text'].split('.')
                    bot.sendPhoto(chat_id, sberdrawer.draw(numbers[0], numbers[1]))
                    adminka(chat_id)
                elif 'joycasino_amount' in query[chat_id]:
                    amounts[chat_id] = msg['text']
                    bot.sendMessage(chat_id, '–ù–∞–ø–∏—à–∏ –º–µ–π–ªüì© (–±–µ–∑ @gmail.com)')
                    query[chat_id].remove('joycasino_amount')
                    query[chat_id].append('joycasino_mail')
                elif 'joycasino_mail' in query[chat_id]:
                    bot.sendPhoto(chat_id, joydrawer.draw(msg['text'], amounts[chat_id]), caption='–ù–∞ –∑–¥–æ—Ä–æ–≤—å–µ —Å—É–∫–∞')
                    adminka(chat_id)
                elif 'sms' in query[chat_id]:
                    print(sms_query)
                    sms_query[chat_id].insert(0, msg['text'])
                    sms = smsdrawer.draw(sms_query[chat_id])
                    bot.sendPhoto(chat_id, sms, reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                        [dict(text="–û—Ç–º–µ–Ω–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–µ–µüîô", callback_data="sms.delete")]]))
                elif 'telegram_name' in query[chat_id]:
                    tg = tq[chat_id]
                    tg['name'] = msg['text']
                    result = chatdraw(tg['textlist'],tg['name'],tg['avatar'],tg['online'])
                    bot.sendPhoto(chat_id, result, caption='‚úÖ–û—Ç–ª–∏—á–Ω–æ–µ –∏–º—è! –ù–∞—á–∏–Ω–∞–π—Ç–µ –ø–∏—Å–∞—Ç—å!')
                    query[chat_id].remove('telegram_name')
                    query[chat_id].append('telegram_gen')
                elif 'telegram_time' in query[chat_id]:
                    tg = tq[chat_id]
                    tg['textlist'][tg['count']]['time'] = msg['text']
                    result = chatdraw(tg['textlist'],tg['name'],
                        tg['avatar'],tg['online'])
                    bot.sendPhoto(chat_id, result, reply_markup=InlineKeyboardMarkup(inline_keyboard=TELEGRAM_CONTROL))
                    query[chat_id].remove('telegram_time')
                    query[chat_id].append('telegram_gen')


            except Exception as e:
                bot.sendMessage(chat_id, 'üö´üö´üö´\n–û—à–∏–±–∫–∞: ' + str(e))

            if 'telegram_gen' in query[chat_id]:
                tg = tq[chat_id]
                tg['textlist'][tg['count']].append(msg['text'])
                result = chatdraw(tg['textlist'],tg['name'], tg['avatar'],tg['online'])
                bot.sendPhoto(chat_id, result, reply_markup=InlineKeyboardMarkup(inline_keyboard=TELEGRAM_CONTROL))

            

    if content_type == 'photo':
        if 'result' in query[chat_id]:
            try:
                char = msg['caption'].split('.')
                file = BytesIO()
                bot.download_file(msg['photo'][-1]['file_id'], file)
                file.seek(0)
                face = Image.open(file)
                result = result_drawer.draw(face, char[0], char[1], char[2], char[3])
                bot.sendPhoto(chat_id, result)
            except KeyError:
                bot.sendMessage(chat_id, "üö´–¢—ã –Ω–µ –¥–æ–±–∞–≤–∏–ª –æ–ø–∏—Å–∞–Ω–∏—è (—Ç.–µ. –ø–æ–¥–ø–∏—Å–∏ –∫ —Ñ–æ—Ç–æ)\n**–ü—Ä–∏–º–µ—Ä –ø–æ–¥–ø–∏—Å–∏:**\n–ù–∏–∫–æ–ª–∞–π –ù–∏–∫–æ–ª–∞–µ–≤.18.750.26590\n**–¢–æ –µ—Å—Ç—å:**\n–ò–º—è.–í–æ–∑—Ä–∞—Å—Ç.–°—Ç–∞—Ä—Ç.–ü—Ä–∏–±—ã–ª—å\n\n**–í—Å–µ —á–µ—Ä–µ–∑ —Ç–æ—á–∫—É**", parse_mode='Markdown')
            except IndexError:
                bot.sendMessage(chat_id, "üö´–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ (—Ç.–µ. –ø–æ–¥–ø–∏—Å—å –∫ —Ñ–æ—Ç–æ)\n**–ü—Ä–∏–º–µ—Ä –ø–æ–¥–ø–∏—Å–∏:**\n–ù–∏–∫–æ–ª–∞–π –ù–∏–∫–æ–ª–∞–µ–≤.18.750.26590\n**–¢–æ –µ—Å—Ç—å:**\n–ò–º—è.–í–æ–∑—Ä–∞—Å—Ç.–°—Ç–∞—Ä—Ç.–ü—Ä–∏–±—ã–ª—å\n\n**–í—Å–µ —á–µ—Ä–µ–∑ —Ç–æ—á–∫—É**", parse_mode='Markdown')
        elif 'telegram_photo' in query[chat_id]:
            tg = tq[chat_id]
            file = BytesIO()
            bot.download_file(msg['photo'][-1]['file_id'], file)
            file.seek(0)
            avatar = Image.open(file)
            tg['avatar'] = avatar
            bot.sendMessage(chat_id, '‚úÖ–•–æ—Ä–æ—à–æ, –∞–≤–∞—Ç–∞—Ä –∑–∞–≥—Ä—É–∂–µ–Ω. –¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ –∏–º—è.')
            query[chat_id].remove('telegram_photo')
            query[chat_id].append('telegram_name')
        elif 'telegram_gen' in query[chat_id]:
            tg = tq[chat_id]
            file = BytesIO()
            bot.download_file(msg['photo'][-1]['file_id'], file)
            file.seek(0)
            img = Image.open(file)
            tg['textlist'][tg['count']].append(img)
            result = chatdraw(tg['textlist'], tg['name'], tg['avatar'],tg['online'])
            bot.sendPhoto(chat_id, result, reply_markup=InlineKeyboardMarkup(inline_keyboard=TELEGRAM_CONTROL))
        elif 'watermark_target' in query[chat_id]:
            query[chat_id].remove('watermark_target')
            query[chat_id].append('watermark_mark')
            file = BytesIO()
            bot.download_file(msg['photo'][-1]['file_id'], file)
            file.seek(0)
            img_query.update({chat_id: Image.open(file)})
            bot.sendMessage(chat_id, '–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—É—é –≤–æ—Ç–µ—Ä–º–∞—Ä–∫—É –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π.üñå', reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                [dict(text='–ë–∞–∏–Ω–∞ –©–µ–¥—Ä–∞—èüíò', callback_data='watermark.baina')],
                [dict(text='Albinos Money Teamüíµ', callback_data='watermark.albinos')]]))
        elif 'watermark_mark' in query[chat_id]:
            query[chat_id].remove('watermark_mark')
            file = BytesIO()
            bot.download_file(msg['photo'][-1]['file_id'], file)
            file.seek(0)
            bot.sendPhoto(chat_id, wm.mark(img_query[chat_id], Image.open(file)))


def on_callback_query(msg):
    query_id, from_id, data = telepot.glance(msg, flavor='callback_query')
    print('Callback query:', query_id, from_id, data)
    data = data.split('.')
    if from_id not in query:
        if from_id in ADMINS:
            query[from_id].append('logged')
        else:
            bot.sendMessage(from_id, '**–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å**üîê', parse_mode='Markdown')
            query[from_id].append('logging')
    elif 'logged' in query[from_id]:
        if data[0] == 'result':
            if data[1] == 'generate':
                bot.answerCallbackQuery(query_id, '–û—Ç–ø—Ä–∞–≤—å —Ñ–æ—Ç–æ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º.üì∑')
                query[from_id].append('result')
                bot.sendMessage(from_id, '–û—Ç–ø—Ä–∞–≤—å —Ñ–æ—Ç–æ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º.üì∑', reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                    [dict(text='ü§∑‚Äç‚ôÇÔ∏è–ö–∞–∫?', callback_data='result.tutor')]]))
            elif data[1] == 'tutor':
                bot.answerCallbackQuery(query_id, '–©–∞ –≤—Å–µ –ø–æ–∫–∞–∂—É —Ä–∞—Å—Å–∫–∞–∂—É')
                bot.sendMessage(from_id, '–¢—ã –¥–æ–ª–∂–µ–Ω –º–Ω–µ –ø—Ä–∏—Å–ª–∞—Ç—å –ø—Ä–∏–º–µ—Ä–Ω–æ –≤–æ—Ç —Ç–∞–∫–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å –ø–æ–¥–ø–∏—Å—å—é!')
                bot.sendPhoto(from_id, 'https://i1.sndcdn.com/avatars-000338809424-572092-t500x500.jpg', caption='–°–∏–∫—Å–Ω–∞–π–Ω.69.1000.100000')
                bot.sendMessage(from_id, '–¢–æ–≥–¥–∞ —Ç—ã –ø–æ–ª—É—á–∏—à—å —Ç–∞–∫—É—é —à—Ç—É–∫—Éüëá')
                bot.sendPhoto(from_id, 'AgADAgAD1qoxG8zHoUhT7UKEyRdyKoOBCA4ABKbxp6mlejJiP7gBAAEC')
        

        elif data[0] == 'sberbank':
            if data[1] == 'generate':
                bot.answerCallbackQuery(query_id, 'OK')
                query[from_id].append('sberbank')
                bot.sendMessage(from_id, '–ö–∞—Ä–æ—á –Ω–∞–ø–∏—à–∏ —Å–∫–æ–ª—å–∫–æ —Ç—ã –µ–º—É "–ø–µ—Ä–µ–≤–µ–ª"üíµ\n\nP.S. –ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∑–Ω–∞–∫–∏ —Ç–æ–ª—å–∫–æ 1-5 –∏ 0\n\n –ò –µ–≥–æ –∫–∞—Ä—Ç—É (16 —Ü–∏—Ñ—Ä)üí≥\n\n–ß–ï–†–ï–ó –¢–û–ß–ö–£.\n\n–ü—Ä–∏–º–µ—Ä: 10000.4276656589765432')
        

        elif data[0] == 'joycasino':
            if data[1] == 'generate':
                bot.answerCallbackQuery(query_id, 'OK')
                bot.sendMessage(from_id, '–ù–∞–ø–∏—à–∏ —Å—É–º–º—Éü§ë')
                query[from_id].append('joycasino_amount')


        elif data[0] == 'sms':
            if data[1] == 'generate':
                bot.answerCallbackQuery(query_id, 'OK')
                bot.sendMessage(from_id, '–ï—Å–ª–∏ –≤–ø–µ—Ä–≤—ã–µ –æ–∑–Ω–∞–∫–æ–º—å—Å—èüëáüëá', reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                    [dict(text="–¢—É—Ç–æ—Ä–∏–∞–ª‚úÖ", callback_data='sms.tutorial')],
                    [dict(text="–ù–∞—á–∞—Ç—åüíª", callback_data="sms.start")]]))
            elif data[1] == 'tutorial':
                bot.answerCallbackQuery(query_id, '–ü—Ä–æ—á–∏—Ç–∞–π –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ!')
                bot.sendMessage(from_id, '‚úÖ–°–æ–æ–±—â–µ–Ω–∏—è –±—É–¥—É—Ç –≤—ã–≤–æ–¥–∏—Ç—Å—è —Å–Ω–∏–∑—É –≤–≤–µ—Ä—Ö\n‚úÖ–¢—ã –¥–æ–ª–∂–µ–Ω –≤—ã–±—Ä–∞—Ç—å –∫–∞–∫–∏–µ –ø–æ–∫–∞–∑–∞—Ç—å —Å —Ö–≤–æ—Å—Ç–æ–º –∫–∞–∫–∏–µ –Ω–µ—Ç')
                bot.sendMessage(from_id, '–§–æ—Ä–º–∞—Ç —Å–æ–æ–±—â–µ–Ω–∏–π —Ç–∞–∫–æ–≤ (–†–∞–∑–¥–µ–ª—è–µ—Ç—Å—è —á–µ—Ä–µ–∑ —Ç–µ–≥–∏):\n‚úÖ"—Å#VISA4734" - —Å —Ö–≤–æ—Å—Ç–æ–º\n‚úÖ"–±#VISA4734" - –±–µ–∑ —Ö–≤–æ—Å—Ç–∞\n‚úÖ"–î–î#01#1230"')
                bot.sendPhoto(from_id, "AgADAgADx6sxG8DQ0UiujtIrhlPFa65IUw8ABIAGKRCbL7ybVCAFAAEC", caption="–ù–∞–≥–ª—è–¥–Ω–æüì∑", reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                    [dict(text="–ù–∞—á–∞—Ç—åüíª", callback_data="sms.start")]]))
            elif data[1] == 'start':
                query[from_id].append('sms')
                sms_query[from_id] = []
                bot.answerCallbackQuery(query_id, 'OK')
                bot.sendMessage(from_id, 'üì≤–ù–∞—á–∏–Ω–∞–π –ø–∏—Å–∞—Ç—å:\n–°–∫–æ–ª—å–∫–æ –Ω–∞–ø–∏—Å–∞–Ω–æ: {0}ü•á'.format(len(sms_query[from_id])))
            elif data[1] == 'delete':
                bot.answerCallbackQuery(query_id, 'OK')
                if len(sms_query[from_id]) != 0:
                    sms_query[from_id].pop()
                    sms = smsdrawer.draw(sms_query[from_id])
                    bot.sendPhoto(from_id, sms, reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                        [dict(text="–û—Ç–º–µ–Ω–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–µ–µüîô", callback_data="sms.delete")]]))
                else:
                    adminka(from_id)


        elif data[0] == 'telegram':
            if data[1] == 'generate':
                bot.answerCallbackQuery(query_id, 'OK')
                bot.sendMessage(from_id, 'üì≤–û—Ç–ø—Ä–∞–≤—å —Ñ–æ—Ç–æ –∞–≤–∞—Ç–∞—Ä–∫–∏')
                tq.update({from_id: {'textlist':[], 'online': 0, 'time': '12:00', 'count':0}})
                query[from_id].append('telegram_photo')
            elif data[1] == 'swap':
                tg = tq[chat_id]
                bot.answerCallbackQuery(query_id, 'OK')
                tg['count'] += 1
                tg['textlist'].append({'sender': tg['count'] % 2,'textlist':[], 'time': tg['textlist'][tg['count'] - 1]['time']})
            elif data[1] == 'undo':
                tg = tq[chat_id]
                bot.answerCallbackQuery(query_id, 'OK')
                tg['textlist'][tg['count']].pop()
                result = chatdraw(tg['textlist'],tg['name'],tg['avatar'],tg['online'])
                bot.sendPhoto(from_id, result, reply_markup=InlineKeyboardMarkup(inline_keyboard=TELEGRAM_CONTROL))
            elif data[1] == 'time':
                bot.answerCallbackQuery(query_id, 'OK')
                query[from_id].remove('telegram_gen')
                query[from_id].append('telegram_time')
                bot.sendMessage(from_id, '–ù–∞–ø–∏—à–∏—Ç–µ –≤—Ä–µ–º—è‚è∞')


        elif data[0] == 'watermark':
            if data[1] == 'generate':
                bot.answerCallbackQuery(query_id, 'OK')
                query[from_id].append('watermark_target')
                bot.sendMessage(from_id, 'üì≤–û—Ç–ø—Ä–∞–≤—å —Å—é–¥–∞ —Ñ–æ—Ç–æ, –∫–æ—Ç–æ—Ä–æ–µ —Ö–æ—á–µ—à—å –∑–∞–≤–æ—Ç–µ—Ä–º–∞—Ä–∏—Ç—å.‚úèÔ∏è')
            elif data[1] == 'baina':
                bot.answerCallbackQuery(query_id, 'OK')
                query[from_id].remove('watermark_mark')
                img = Image.open('source/baina.png')
                bot.sendPhoto(from_id, wm.mark(img_query[from_id], img))
                adminka(from_id)
            elif data[1] == 'albinos':
                bot.answerCallbackQuery(query_id, 'OK')
                query[from_id].remove('watermark_mark')
                img = Image.open('source/albinos.png')
                bot.sendPhoto(from_id, wm.mark(img_query[from_id], img))
                adminka(from_id)


TOKEN = '860594921:AAG1GHkdaJU0JFlExy-6CNJUSeeIYcyTo4c'
URL = 'https://opitniynaebator.herokuapp.com/'

app = Flask(__name__)
bot = telepot.Bot(TOKEN)
webhook = OrderedWebhook(bot, {'chat': on_chat_message,
                               'callback_query': on_callback_query})

@app.route('/', methods=['GET', 'POST'])
def pass_update():
    webhook.feed(request.data)
    return 'OK'

@app.route('/conversion', methods=['GET'])
def conversion():
	webhook.feed(request.data)
	ip = request.args.get('ip')
	offer = request.args.get('offer')
	geo = request.args.get('geo')
	city = request.args.get('city')
	summa = request.args.get('sum')
	operationsystem = request.args.get('os')
	for admin in ADMINS:
		bot.sendMessage(admin, '''‚úÖ–ö–û–ù–í–ï–†–°–ò–Ø!‚úÖ\n
								  ‚Äî ‚Äî ‚Äî ‚Äî ‚Äî ‚Äî ‚Äî ‚Äî\n
							      üì°IP:{0}\n
								  üß©–û—Ñ—Ñ–µ—Ä:{1}\n
								  üóæ–ì–ï–û:{2}\n
								  üè¢–ì–æ—Ä–æ–¥:{3}\n
								  üíµ–°—É–º–º–∞:{4}\n
								  üíΩ–û–°:{5}\n
								  ‚Äî ‚Äî ‚Äî ‚Äî ‚Äî ‚Äî ‚Äî ‚Äî'''.format(ip, offer, geo, city, summa, operationsystem))
	return 'OK'


if __name__ == '__main__':
    try:
        bot.setWebhook(URL)
    # Sometimes it would raise this error, but webhook still set successfully.
    except telepot.exception.TooManyRequestsError:
        pass

    webhook.run_as_thread()
    app.run(host='0.0.0.0', port=int(os.environ.get('PORT', 5000)), debug=True)