import sys
import os
from flask import Flask, request
import telepot
from telepot.loop import OrderedWebhook
from result_drawer import draw
import joydrawer
import sberdrawer
from io import BytesIO
from PIL import Image
from telepot.namedtuple import ReplyKeyboardMarkup, InlineKeyboardMarkup

"""
$ python2.7 flask_skeleton.py <token> <listening_port> <webhook_url>
Webhook path is '/webhook', therefore:
<webhook_url>: https://<base>/webhook
"""
logged_users = []
logging_in = []
result_query = []
sberbank_query = []
joycasino_query = []
PASSWORD = '–∞—Ä—Ç–µ–º –∫—Ä—É—Ç–æ–π'
admins = ['474504117', 474504117]

def adminka(chat_id):
    if chat_id in result_query:
        result_query.remove(chat_id)
    if chat_id in sberbank_query:
        sberbank_query.remove(chat_id)
    if chat_id in joycasino_query:
        joycasino_query.remove(chat_id)
    bot.sendMessage(chat_id, '–ß–µ–≥–æ —Ö–æ—á–µ—à—å –≥–æ—Å–ø–æ–¥–∏–Ω)üíª', reply_markup=InlineKeyboardMarkup(inline_keyboard=[
        [dict(text='–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ê–π—Å–µ–Ω—ãüòç', callback_data='result.generate')],
        [dict(text='–°–±–µ—Ä–±–∞–Ω–∫üí≥', callback_data='sberbank.generate')],
        [dict(text='JOYCASINO –ë–∞–ª–∞–Ω—Åü§ë', callback_data='joycasino.generate_prepare')]]))

def on_chat_message(msg):
    content_type, chat_type, chat_id = telepot.glance(msg)
    if content_type == 'text':
        if msg['text'] == '/start':
            if chat_id not in logged_users:
                if chat_id in admins:
                    logged_users.append(chat_id)
                    adminka(chat_id)
                else:
                    bot.sendMessage(chat_id, '**–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å**üîê', parse_mode='Markdown')
                    logging_in.append(chat_id)
        elif chat_id in logging_in:
            if msg['text'].lower() == PASSWORD:
                logged_users.append(chat_id)
                logging_in.remove(chat_id)
                bot.sendMessage(chat_id, '**–í—Ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ, –±—Ä–∞—Ç**üñ§', parse_mode='Markdown')
        elif chat_id in logged_users:
            if msg['text'] == '/backnahoi':
                adminka(chat_id)
            elif chat_id in sberbank_query:
                try:
                    numbers = msg['text'].split('.')
                    bot.sendPhoto(chat_id, sberdrawer.draw(numbers[0], numbers[1]))
                except Exception as e:
                    bot.sendMessage(chat_id, 'üö´üö´üö´\n–û—à–∏–±–∫–∞: ' + str(e))
                adminka(chat_id)
            elif chat_id in joycasino_query:
                try:
                    amount = int(msg['text'])
                    bot.sendPhoto(joydrawer.draw(amount, amount))
                except Exception as e:
                    bot.sendMessage(chat_id, 'üö´üö´üö´\n–û—à–∏–±–∫–∞: ' + str(e))
                adminka(chat_id)
            

    if content_type == 'photo' and chat_id in logged_users and chat_id in result_query:
        try:
            char = msg['caption'].split('.')
            file = BytesIO()
            bot.download_file(msg['photo'][-1]['file_id'], file)
            file.seek(0)
            face = Image.open(file)
            result = draw(face, char[0], char[1], char[2], char[3])
            bot.sendPhoto(chat_id, result, reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                [dict(text='–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –±–∞–ª–∞–Ω—Å üéª', callback_data='result.generate_balance.{0}'.format(char[3]))],
                [dict(text='–ù–∞–∑–∞–¥üîô', callback_data='result.back')]]))
        except KeyError:
            bot.sendMessage(chat_id, "üö´–¢—ã –Ω–µ –¥–æ–±–∞–≤–∏–ª –æ–ø–∏—Å–∞–Ω–∏—è (—Ç.–µ. –ø–æ–¥–ø–∏—Å–∏ –∫ —Ñ–æ—Ç–æ)\n**–ü—Ä–∏–º–µ—Ä –ø–æ–¥–ø–∏—Å–∏:**\n–ù–∏–∫–æ–ª–∞–π –ù–∏–∫–æ–ª–∞–µ–≤.18.750.26590\n**–¢–æ –µ—Å—Ç—å:**\n–ò–º—è.–í–æ–∑—Ä–∞—Å—Ç.–°—Ç–∞—Ä—Ç.–ü—Ä–∏–±—ã–ª—å\n\n**–í—Å–µ —á–µ—Ä–µ–∑ —Ç–æ—á–∫—É**", parse_mode='Markdown')
        except IndexError:
            bot.sendMessage(chat_id, "üö´–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ (—Ç.–µ. –ø–æ–¥–ø–∏—Å—å –∫ —Ñ–æ—Ç–æ)\n**–ü—Ä–∏–º–µ—Ä –ø–æ–¥–ø–∏—Å–∏:**\n–ù–∏–∫–æ–ª–∞–π –ù–∏–∫–æ–ª–∞–µ–≤.18.750.26590\n**–¢–æ –µ—Å—Ç—å:**\n–ò–º—è.–í–æ–∑—Ä–∞—Å—Ç.–°—Ç–∞—Ä—Ç.–ü—Ä–∏–±—ã–ª—å\n\n**–í—Å–µ —á–µ—Ä–µ–∑ —Ç–æ—á–∫—É**", parse_mode='Markdown')
        
    print('Chat Message:', content_type, chat_type, chat_id)


def on_callback_query(msg):
    query_id, from_id, data = telepot.glance(msg, flavor='callback_query')
    print('Callback query:', query_id, from_id, data)
    data = data.split('.')
    if data[0] == 'result':
        if data[1] == 'generate_balance':
            bot.answerCallbackQuery(query_id, '–©–∞ –≤—Å–µ –±—É–¥–µ—Ç')
            balance = joydrawer.draw(int(data[2])- 100, int(data[2]))
            bot.sendPhoto(from_id, balance)
        elif data[1] == 'generate':
            bot.answerCallbackQuery(query_id, '–û—Ç–ø—Ä–∞–≤—å —Ñ–æ—Ç–æ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º.üì∑')
            result_query.append(from_id)
            bot.sendMessage(from_id, '–û—Ç–ø—Ä–∞–≤—å —Ñ–æ—Ç–æ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º.üì∑')
        elif data[1] == 'back':
            bot.answerCallbackQuery(query_id, 'OK')
            result_query.remove(from_id)
            adminka(from_id)
    elif data[0] == 'sberbank':
        if data[1] == 'generate':
            bot.answerCallbackQuery(query_id, 'OK')
            sberbank_query.append(from_id)
            bot.sendMessage(from_id, '–ö–∞—Ä–æ—á –Ω–∞–ø–∏—à–∏ —Å–∫–æ–ª—å–∫–æ —Ç—ã –µ–º—É "–ø–µ—Ä–µ–≤–µ–ª"üíµ\n\nP.S. –ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∑–Ω–∞–∫–∏ —Ç–æ–ª—å–∫–æ 1-5 –∏ 0\n\n –ò –µ–≥–æ –∫–∞—Ä—Ç—É (16 —Ü–∏—Ñ—Ä)üí≥\n\n–ß–ï–†–ï–ó –¢–û–ß–ö–£.\n\n–ü—Ä–∏–º–µ—Ä: 10000.4276656589765432')
    elif data[0] == 'joycasino':
        if data[1] == 'generate_prepare':
            bot.answerCallbackQuery(query_id, 'OK')
            bot.sendMessage(from_id, '–ù–∞–ø–∏—à–∏ —Å—É–º–º—Éü§ë')
            joycasino_query.append(from_id)

TOKEN = '860594921:AAG1GHkdaJU0JFlExy-6CNJUSeeIYcyTo4c'
URL = 'https://opitniynaebator.herokuapp.com/'

app = Flask(__name__)
bot = telepot.Bot(TOKEN)
webhook = OrderedWebhook(bot, {'chat': on_chat_message,
                               'callback_query': on_callback_query})

@app.route('/', methods=['GET', 'POST'])
def pass_update():
    webhook.feed(request.data)
    return 'OK'

if __name__ == '__main__':
    try:
        bot.setWebhook(URL)
    # Sometimes it would raise this error, but webhook still set successfully.
    except telepot.exception.TooManyRequestsError:
        pass

    webhook.run_as_thread()
    app.run(host='0.0.0.0', port=int(os.environ.get('PORT', 5000)), debug=True)